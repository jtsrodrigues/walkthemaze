
// File generated by Wsutil Compiler version 1.0095 
// This file defines C/C++ functions, callbacks, types that correspond to operations,
// and types specified in WSDL and XSD files processed by Wsutil compiler. The generated 
// type definitions, function and callback declarations can be used with various 
// Web Services APIs either in applications that send and receive requests to and 
// from a running web service, or in the implementation of web services, or in both. 
//
// If Wsutil has generated this file from a WSDL file, the file may contain up to three 
// sets of C/C++ definitions. The first set consists of function declarations that can be 
// used in calling operations on a running web service from client applications. 
// The second set consists of callback declarations that can be used in the 
// implementation of web services.  
// The third set contains definitions C/C++ structures that are used for serialization of 
// C/C++ types to Schema types defined in the WSDL file.
//
// The set of function declarations for web services clients may contain the 
// following declaration: 
//
//    HRESULT WINAPI DefaultBinding_ICalculator_Add(
//       _In_ WS_SERVICE_PROXY* _serviceProxy,
//       _In_ int a, 
//       _In_ int b, 
//       _Out_ int* result, 
//       _In_ WS_HEAP* _heap,
//       _In_opt_ WS_CALL_PROPERTY* _callProperties,
//       _In_ const ULONG _callPropertyCount,
//       _In_opt_ const WS_ASYNC_CONTEXT*_asyncContext,
//       _In_opt_ WS_ERROR* _error);
//
// This function can be called from an application code to request ICalculator web 
// service to perform operation Add using two integers a and b as input data.
// Once the web service processes this request and sends the result back,
// the result is returned to the caller of this function in the "result" parameter.
// A WS_SERVICE_PROXY must be created using WsCreateServiceProxy() function
// before this proxy function can be invoked.
//
// The set of callbacks for implementation of web services may contain the following 
// definition of a callback: 
//
//    typedef HRESULT (CALLBACK* DefaultBinding_ICalculator_AddCallback) (
//       _In_ const WS_OPERATION_CONTEXT* _context,
//       _In_ int a, 
//       _In_ int b, 
//       _Out_ int* result, 
//       _In_ const WS_ASYNC_CONTEXT* _asyncContext,
//       _In_ WS_ERROR* _error); 
//
//    typedef struct DefaultBinding_ICalculatorFunctionTable 
//    {
//         DefaultBinding_ICalculator_AddCallback DefaultBinding_ICalculator_Add;
//    } DefaultBinding_ICalculatorFunctionTable;
//
// This definition can be used to implement a function that defines the Add operation 
// as a part of an ICalculator web service. Once this callback is implemented and 
// the web service is deployed and running, if a client applications attempts to 
// execute the operation Add, the implementation of this callback is called and 
// it receives two integers a and b as input data and it returns a third integer 
// that is the result of the operation. A WS_SERVICE_ENDPOINT must be filled out, 
// and its contract field set to instance of such a function table.  
// WsCreateServiceHost may then be used to register the endpoint as a service.
// 
// The set with definitions of C/C++ structures may contain a definition of the following 
// structure:
//    typedef struct ContactInfo 
//    {
//			WCHAR*  name;
//			WCHAR*  email;
//			__int64 contactID;
//	  } ContactInfo;
//
// This structure corresponds to the following complex type defined in the WSDL file:
//    <s:complexType name="ContactInfo">
//      <s:sequence>
//        <s:element minOccurs="1" maxOccurs="1" name="name" type="s:string" />
//        <s:element minOccurs="1" maxOccurs="1" name="email" type="s:string" />
//        <s:element minOccurs="1" maxOccurs="1" name="contactID" type="s:long" />
//      </s:sequence>
//    </s:complexType>
//
// For more information about content of this file, please see the documentation for
// Wsutil compiler.
// If Wsutil generates this file from a WSDL file and policy processing is enabled using
// policy switch, the file may contain declaration of functions that can be used 
// for creating a proxy to a web service or an endpoint of a web service. 
// For example, the file may contain declaration of the following function:
//
//    HRESULT DefaultBinding_ICalculator_CreateServiceProxy(
//    _In_ WS_HTTP_SSL_BINDING_TEMPLATE* templateValue,
//    _In_reads_opt_(proxyPropertyCount) const WS_PROXY_PROPERTY* proxyProperties,
//    _In_ const ULONG proxyPropertyCount,
//    _Outptr_ WS_SERVICE_PROXY** proxy,
//    _In_opt_ WS_ERROR* error);
//
// This function can be called from application code to create a service
// proxy object. A service proxy must be created before any request can be sent 
// to the web service.
//
// Also, the file may contain declaration of the following function:
//
//    HRESULT DefaultBinding_ICalculator_CreateServiceEndpoint(
//    _In_ WS_HTTP_SSL_BINDING_TEMPLATE* templateValue,
//    _In_opt_ WS_STRING address,
//    _In_opt_ struct DefaultBinding_ICalculatorFunctionTable* functionTable,
//    _In_opt_ WS_SERVICE_SECURITY_CALLBACK authorizationCallback,
//    _In_reads_opt_(endpointPropertyCount) WS_SERVICE_ENDPOINT_PROPERTY* endpointProperties,
//    _In_ const ULONG endpointPropertyCount,
//    _In_ WS_HEAP* heap,
//    _Outptr_ WS_SERVICE_ENDPOINT** serviceEndpoint,
//    _In_opt_ WS_ERROR* error);
//
// This function can be used to create a Service Host object, which has to be 
// created before a web services starts receiving requests from its clients.
//
// For more information about content of this file, please see the documentation for
// Wsutil compiler.
#if _MSC_VER > 1000 
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

// The following client functions were generated:

//     BasicHttpBinding_IServiceSF_InsertUploadData
//     BasicHttpBinding_IServiceSF_CheckLogin
//     BasicHttpBinding_IServiceSF_RegisterUser
//     BasicHttpBinding_IServiceSF_DownloadMapa
//     BasicHttpBinding_IServiceSF_GetNumberOfUsers
//     BasicHttpBinding_IServiceSF_InsertTrack
//     BasicHttpBinding_IServiceSF_InfoMapa
//     BasicHttpBinding_IServiceSF_DownloadMusica
//     BasicHttpBinding_IServiceSF_DownloadTextura
//     BasicHttpBinding_IServiceSF_DownloadModeloInimigo

// The following server function tables were generated:

//     struct BasicHttpBinding_IServiceSFFunctionTable

// the following policy helpers were generated:

//  BasicHttpBinding_IServiceSF_CreateServiceProxy;
//  BasicHttpBinding_IServiceSF_CreateServiceEndpoint;

// The following header files must be included in this order before this one

// #include <WebServices.h>
// #include "tempuri.org.xsd.h"

////////////////////////////////////////////////
// Policy helper routines
////////////////////////////////////////////////

//  WS_CHANNEL_PROPERTY_ENCODING = WS_ENCODING_XML_UTF8,
//  WS_CHANNEL_PROPERTY_ADDRESSING_VERSION = WS_ADDRESSING_VERSION_TRANSPORT,
//  WS_ENVELOPE_VERSION = WS_ENVELOPE_VERSION_SOAP_1_1,
// client channel type: WS_CHANNEL_TYPE_REQUEST, service endpoint channel type: WS_CHANNEL_TYPE_REPLY

HRESULT BasicHttpBinding_IServiceSF_CreateServiceProxy(
    _In_opt_ WS_HTTP_BINDING_TEMPLATE* templateValue,
    _In_reads_opt_(proxyPropertyCount) const WS_PROXY_PROPERTY* proxyProperties,
    _In_ const ULONG proxyPropertyCount,
    _Outptr_ WS_SERVICE_PROXY** _serviceProxy,
    _In_opt_ WS_ERROR* error);

struct BasicHttpBinding_IServiceSFFunctionTable;
HRESULT BasicHttpBinding_IServiceSF_CreateServiceEndpoint(
    _In_opt_ WS_HTTP_BINDING_TEMPLATE* templateValue,
    _In_opt_ CONST WS_STRING* address,
    _In_opt_ struct BasicHttpBinding_IServiceSFFunctionTable* functionTable,
    _In_opt_ WS_SERVICE_SECURITY_CALLBACK authorizationCallback,
    _In_reads_opt_(endpointPropertyCount) WS_SERVICE_ENDPOINT_PROPERTY* endpointProperties,
    _In_ const ULONG endpointPropertyCount,
    _In_ WS_HEAP* heap,
    _Outptr_ WS_SERVICE_ENDPOINT** serviceEndpoint,
    _In_opt_ WS_ERROR* error);

////////////////////////////////////////////////
// Client functions definitions
////////////////////////////////////////////////

// operation: BasicHttpBinding_IServiceSF_InsertUploadData
HRESULT WINAPI BasicHttpBinding_IServiceSF_InsertUploadData(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* user, 
    _In_ int score, 
    _In_opt_z_ WCHAR* mapa, 
    _Out_ BOOL* InsertUploadDataResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_CheckLogin
HRESULT WINAPI BasicHttpBinding_IServiceSF_CheckLogin(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* password, 
    _Out_ BOOL* CheckLoginResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_RegisterUser
HRESULT WINAPI BasicHttpBinding_IServiceSF_RegisterUser(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* password, 
    _Out_ BOOL* RegisterUserResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_DownloadMapa
HRESULT WINAPI BasicHttpBinding_IServiceSF_DownloadMapa(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* fileName, 
    _Outptr_opt_result_z_ WCHAR** DownloadMapaResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_GetNumberOfUsers
HRESULT WINAPI BasicHttpBinding_IServiceSF_GetNumberOfUsers(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _Out_ int* GetNumberOfUsersResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_InsertTrack
HRESULT WINAPI BasicHttpBinding_IServiceSF_InsertTrack(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* map, 
    _In_opt_z_ WCHAR* track, 
    _Out_ BOOL* InsertTrackResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_InfoMapa
HRESULT WINAPI BasicHttpBinding_IServiceSF_InfoMapa(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _Outptr_opt_result_z_ WCHAR** InfoMapaResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_DownloadMusica
HRESULT WINAPI BasicHttpBinding_IServiceSF_DownloadMusica(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadMusicaResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_DownloadTextura
HRESULT WINAPI BasicHttpBinding_IServiceSF_DownloadTextura(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadTexturaResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

// operation: BasicHttpBinding_IServiceSF_DownloadModeloInimigo
HRESULT WINAPI BasicHttpBinding_IServiceSF_DownloadModeloInimigo(
    _In_ WS_SERVICE_PROXY* _serviceProxy,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadModeloInimigoResult, 
    _In_ WS_HEAP* _heap,
    _In_reads_opt_(_callPropertyCount) const WS_CALL_PROPERTY* _callProperties,
    _In_ const ULONG _callPropertyCount,
    _In_opt_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_opt_ WS_ERROR* _error);

////////////////////////////////////////////////
// Service functions definitions
////////////////////////////////////////////////

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_InsertUploadDataCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* user, 
    _In_ int score, 
    _In_opt_z_ WCHAR* mapa, 
    _Out_ BOOL* InsertUploadDataResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_CheckLoginCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* password, 
    _Out_ BOOL* CheckLoginResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_RegisterUserCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* password, 
    _Out_ BOOL* RegisterUserResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_DownloadMapaCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* fileName, 
    _Outptr_opt_result_z_ WCHAR** DownloadMapaResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_GetNumberOfUsersCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _Out_ int* GetNumberOfUsersResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_InsertTrackCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* user, 
    _In_opt_z_ WCHAR* map, 
    _In_opt_z_ WCHAR* track, 
    _Out_ BOOL* InsertTrackResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_InfoMapaCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _Outptr_opt_result_z_ WCHAR** InfoMapaResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_DownloadMusicaCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadMusicaResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_DownloadTexturaCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadTexturaResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

typedef HRESULT (CALLBACK* BasicHttpBinding_IServiceSF_DownloadModeloInimigoCallback) (
    _In_ const WS_OPERATION_CONTEXT* _context,
    _In_opt_z_ WCHAR* nome, 
    _Outptr_opt_result_z_ WCHAR** DownloadModeloInimigoResult, 
    _In_ const WS_ASYNC_CONTEXT* _asyncContext,
    _In_ WS_ERROR* _error);

// binding: BasicHttpBinding_IServiceSF
typedef struct BasicHttpBinding_IServiceSFFunctionTable 
{
    BasicHttpBinding_IServiceSF_InsertUploadDataCallback BasicHttpBinding_IServiceSF_InsertUploadData;
    BasicHttpBinding_IServiceSF_CheckLoginCallback BasicHttpBinding_IServiceSF_CheckLogin;
    BasicHttpBinding_IServiceSF_RegisterUserCallback BasicHttpBinding_IServiceSF_RegisterUser;
    BasicHttpBinding_IServiceSF_DownloadMapaCallback BasicHttpBinding_IServiceSF_DownloadMapa;
    BasicHttpBinding_IServiceSF_GetNumberOfUsersCallback BasicHttpBinding_IServiceSF_GetNumberOfUsers;
    BasicHttpBinding_IServiceSF_InsertTrackCallback BasicHttpBinding_IServiceSF_InsertTrack;
    BasicHttpBinding_IServiceSF_InfoMapaCallback BasicHttpBinding_IServiceSF_InfoMapa;
    BasicHttpBinding_IServiceSF_DownloadMusicaCallback BasicHttpBinding_IServiceSF_DownloadMusica;
    BasicHttpBinding_IServiceSF_DownloadTexturaCallback BasicHttpBinding_IServiceSF_DownloadTextura;
    BasicHttpBinding_IServiceSF_DownloadModeloInimigoCallback BasicHttpBinding_IServiceSF_DownloadModeloInimigo;
} BasicHttpBinding_IServiceSFFunctionTable;

////////////////////////////////////////////////
// Global web service descriptions.
////////////////////////////////////////////////

typedef struct _tempuri_org_wsdl
{
    struct // messages
    {
        // message: IServiceSF_InsertUploadData_InputMessage
        // c type: _InsertUploadData
        // action: "http://tempuri.org/IServiceSF/InsertUploadData"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InsertUploadData_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InsertUploadData_InputMessage;
        
        // message: IServiceSF_InsertUploadData_OutputMessage
        // c type: _InsertUploadDataResponse
        // action: "http://tempuri.org/IServiceSF/InsertUploadDataResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InsertUploadData_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InsertUploadData_OutputMessage;
        
        // message: IServiceSF_CheckLogin_InputMessage
        // c type: _CheckLogin
        // action: "http://tempuri.org/IServiceSF/CheckLogin"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_CheckLogin_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_CheckLogin_InputMessage;
        
        // message: IServiceSF_CheckLogin_OutputMessage
        // c type: _CheckLoginResponse
        // action: "http://tempuri.org/IServiceSF/CheckLoginResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_CheckLogin_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_CheckLogin_OutputMessage;
        
        // message: IServiceSF_RegisterUser_InputMessage
        // c type: _RegisterUser
        // action: "http://tempuri.org/IServiceSF/RegisterUser"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_RegisterUser_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_RegisterUser_InputMessage;
        
        // message: IServiceSF_RegisterUser_OutputMessage
        // c type: _RegisterUserResponse
        // action: "http://tempuri.org/IServiceSF/RegisterUserResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_RegisterUser_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_RegisterUser_OutputMessage;
        
        // message: IServiceSF_DownloadMapa_InputMessage
        // c type: _DownloadMapa
        // action: "http://tempuri.org/IServiceSF/DownloadMapa"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadMapa_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadMapa_InputMessage;
        
        // message: IServiceSF_DownloadMapa_OutputMessage
        // c type: _DownloadMapaResponse
        // action: "http://tempuri.org/IServiceSF/DownloadMapaResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadMapa_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadMapa_OutputMessage;
        
        // message: IServiceSF_GetNumberOfUsers_InputMessage
        // c type: _GetNumberOfUsers
        // action: "http://tempuri.org/IServiceSF/GetNumberOfUsers"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_GetNumberOfUsers_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_GetNumberOfUsers_InputMessage;
        
        // message: IServiceSF_GetNumberOfUsers_OutputMessage
        // c type: _GetNumberOfUsersResponse
        // action: "http://tempuri.org/IServiceSF/GetNumberOfUsersResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_GetNumberOfUsers_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_GetNumberOfUsers_OutputMessage;
        
        // message: IServiceSF_InsertTrack_InputMessage
        // c type: _InsertTrack
        // action: "http://tempuri.org/IServiceSF/InsertTrack"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InsertTrack_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InsertTrack_InputMessage;
        
        // message: IServiceSF_InsertTrack_OutputMessage
        // c type: _InsertTrackResponse
        // action: "http://tempuri.org/IServiceSF/InsertTrackResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InsertTrack_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InsertTrack_OutputMessage;
        
        // message: IServiceSF_InfoMapa_InputMessage
        // c type: _InfoMapa
        // action: "http://tempuri.org/IServiceSF/InfoMapa"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InfoMapa_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InfoMapa_InputMessage;
        
        // message: IServiceSF_InfoMapa_OutputMessage
        // c type: _InfoMapaResponse
        // action: "http://tempuri.org/IServiceSF/InfoMapaResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_InfoMapa_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_InfoMapa_OutputMessage;
        
        // message: IServiceSF_DownloadMusica_InputMessage
        // c type: _DownloadMusica
        // action: "http://tempuri.org/IServiceSF/DownloadMusica"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadMusica_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadMusica_InputMessage;
        
        // message: IServiceSF_DownloadMusica_OutputMessage
        // c type: _DownloadMusicaResponse
        // action: "http://tempuri.org/IServiceSF/DownloadMusicaResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadMusica_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadMusica_OutputMessage;
        
        // message: IServiceSF_DownloadTextura_InputMessage
        // c type: _DownloadTextura
        // action: "http://tempuri.org/IServiceSF/DownloadTextura"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadTextura_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadTextura_InputMessage;
        
        // message: IServiceSF_DownloadTextura_OutputMessage
        // c type: _DownloadTexturaResponse
        // action: "http://tempuri.org/IServiceSF/DownloadTexturaResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadTextura_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadTextura_OutputMessage;
        
        // message: IServiceSF_DownloadModeloInimigo_InputMessage
        // c type: _DownloadModeloInimigo
        // action: "http://tempuri.org/IServiceSF/DownloadModeloInimigo"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadModeloInimigo_InputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadModeloInimigo_InputMessage;
        
        // message: IServiceSF_DownloadModeloInimigo_OutputMessage
        // c type: _DownloadModeloInimigoResponse
        // action: "http://tempuri.org/IServiceSF/DownloadModeloInimigoResponse"
        // messageDescription: tempuri_org_wsdl.messages.IServiceSF_DownloadModeloInimigo_OutputMessage
        WS_MESSAGE_DESCRIPTION IServiceSF_DownloadModeloInimigo_OutputMessage;
        
    } messages;
    struct // contracts
    {
        // binding: BasicHttpBinding_IServiceSF
        // portType: IServiceSF
        // operation: BasicHttpBinding_IServiceSF_InsertUploadData
        //     input message: IServiceSF_InsertUploadData_InputMessage
        //     output message: IServiceSF_InsertUploadData_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_CheckLogin
        //     input message: IServiceSF_CheckLogin_InputMessage
        //     output message: IServiceSF_CheckLogin_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_RegisterUser
        //     input message: IServiceSF_RegisterUser_InputMessage
        //     output message: IServiceSF_RegisterUser_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_DownloadMapa
        //     input message: IServiceSF_DownloadMapa_InputMessage
        //     output message: IServiceSF_DownloadMapa_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_GetNumberOfUsers
        //     input message: IServiceSF_GetNumberOfUsers_InputMessage
        //     output message: IServiceSF_GetNumberOfUsers_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_InsertTrack
        //     input message: IServiceSF_InsertTrack_InputMessage
        //     output message: IServiceSF_InsertTrack_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_InfoMapa
        //     input message: IServiceSF_InfoMapa_InputMessage
        //     output message: IServiceSF_InfoMapa_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_DownloadMusica
        //     input message: IServiceSF_DownloadMusica_InputMessage
        //     output message: IServiceSF_DownloadMusica_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_DownloadTextura
        //     input message: IServiceSF_DownloadTextura_InputMessage
        //     output message: IServiceSF_DownloadTextura_OutputMessage
        // operation: BasicHttpBinding_IServiceSF_DownloadModeloInimigo
        //     input message: IServiceSF_DownloadModeloInimigo_InputMessage
        //     output message: IServiceSF_DownloadModeloInimigo_OutputMessage
        // contractDescription: tempuri_org_wsdl.contracts.BasicHttpBinding_IServiceSF
        WS_CONTRACT_DESCRIPTION BasicHttpBinding_IServiceSF;
        
    } contracts;
    struct // policies
    {
        // policy for binding: BasicHttpBinding_IServiceSF
        // port name: BasicHttpBinding_IServiceSF, binding: BasicHttpBinding_IServiceSF, namespace: http://tempuri.org/
        WS_HTTP_POLICY_DESCRIPTION BasicHttpBinding_IServiceSF;
    } policies;
} _tempuri_org_wsdl;

extern const _tempuri_org_wsdl tempuri_org_wsdl;

#ifdef __cplusplus
}
#endif

